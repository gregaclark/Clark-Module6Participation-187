//AUTHOR: Gregory Clark
//COURSE: CPT 187
//PURPOSE: Retrieves order details such as discount information, totals, and prize names
//Calculates totals, tax amounts and discount amounts 
//STARTDATE: 7/14/2020


package edu.CPT187.Clark.program6;

public class Order 
{

	//Class Constants
	private final double TAX_RATE = .075;

	//Non-Constant Class Attributes
	private int[] discountCounts;
	private int[] prizeCounts;
	private int discountType = 0;
	private int itemID = 0;
	private String itemName = "";
	private double itemPrice = 0.0;
	private String discountName = "";
	private double discountRate = 0.0;
	private int howMany = 0;
	private int lastItemSelectedIndex = 0;
	private String prizeName = "";


	//Order Constructor
	public Order ()
	{//Start Order Constructor
	}//End Order Constructor


	//Set Method
	//this method will ASSIGN the item selected for order in the array
	public void setLastItemSelectionIndex(int borrowedSearchIndex)
	{//Assign itemSelection to the decimal value of the borrowedMenuSelection 
		lastItemSelectedIndex = borrowedSearchIndex;
	}//End setItemSelection


	//Set Method
	//this method will ASSIGN item ID value for a selected item
	public void setItemID (int[] borrowedItemIDs)
	{//start setItemID
		//set item name to the selected item 
		itemID = borrowedItemIDs[lastItemSelectedIndex];

	}//End setItemName


	//Set Method
	//this method will ASSIGN the name of an item 
	public void setItemName (String[] borrowedItemNames)
	{//Start setItemName to assign the name based on the itemSelection 

		//set item name to the selected item 
		itemName = borrowedItemNames[lastItemSelectedIndex];

	}//End setItemName



	//Set Method
	//this method will ASSIGN the price of an item based on the itemSelection
	public void setItemPrice (double [] borrowedItemPrices)
	{//Assign itemPrice based on the itemSelection 
		itemPrice = borrowedItemPrices[lastItemSelectedIndex];
	}//End setItemPrice



	//Set Method
	//this method will ASSIGN the quantity of an item
	public void setHowMany(int borrowedHowMany)
	{//Assign howMany to the borrowed input 
		howMany = borrowedHowMany;
	}//End setHowMany



	public void setDiscountType(char borrowedMenuSelection)
	{//Assign discountType to the decimal value of the borrowedMenuSelection 
		discountType = borrowedMenuSelection - 'A';
	}//End setHowMany



	//Set Method
	//this method will ASSIGN a discount name
	public void setDiscountName(String [] borrowedDiscountNames)
	{//Start setDiscountName
		// Count discountCounts based on how many times it was selected
		if (discountCounts == null)
		{//create new discount count
			discountCounts = new int [borrowedDiscountNames.length];
		}//end create new discount count
		discountName = borrowedDiscountNames[discountType];
		discountCounts[discountType] ++;
	}//End setDiscountName



	//Set Method
	//this method will ASSIGN a discount rate
	public void setDiscountRate(double [] borrowedDiscountRate)
	{//Assign setDiscountRate based on discountType selected
		discountRate = borrowedDiscountRate[discountType];
	}//End setDiscountRate



	//Set Method
	//this method will ASSIGN a random prize
	public void setPrizeName(String[] borrowedPrizeNames , int borrowedPrizeIndex)
	{//Start setPrizeName

		if(prizeCounts == null)
		{//create new prize count
			prizeCounts = new int [borrowedPrizeNames.length];
		}//end create new prize count

		//Set Prize
		prizeName = borrowedPrizeNames[borrowedPrizeIndex];
		prizeCounts[borrowedPrizeIndex] ++;

	}//End setPrizeName


	//Set Method
	//this method will ASSIGN how many we have left in stock
	public void setDecreaseInStock(Inventory borrowedInventoryObject)
	{ //invoke borrowedInventoryObject.setReduceStock to reduce items purchased
		borrowedInventoryObject.setReduceStock(howMany);
	}// end setDecreaseInStock


	//Get Method
	//this method will RETURN 
	//how many items of the selected item are in stock
	public int getInStockCount(int [] borrowedInStockCounts)
	{//Start getInStockCount
		return borrowedInStockCounts[lastItemSelectedIndex];
	}//End getInStockCount


	//Get Method
	//this method will RETURN an item ID
	public int getItemID()
	{//Start getItemID
		return itemID;
	}//End getItemID


	//Get Method
	//this method will RETURN an item name
	public String getItemName()
	{//Start getItemName
		return itemName;
	}//End getItemName

	//Get Method
	//this method will RETURN  an item price
	public double getItemPrice()
	{//Start getItemPrice
		return itemPrice;
	}//End getItemPrice

	//Get Method
	//this method will RETURN the number of an item chosen
	public int getHowMany()
	{//Start getHowMany
		return howMany;
	}//End getHowMany

	//Get Method
	//this method will RETURN  a discount name
	public String getDiscountName()
	{//Start getDiscountName
		return discountName;
	}//End getDiscountName

	//Get Method
	//this method will RETURN a discount rate
	public double getDiscountRate()
	{//Start getDiscountRate
		return discountRate;
	}//End getDiscountRate


	//Get Method
	//this method will RETURN the number of each discount
	public int[] getDiscountCounts()
	{//Start getDiscountCounts
		return discountCounts;
	}//End getDiscountCounts


	//Get Method
	//this method will RETURN the discounted item price
	public double getDiscountAmt()
	{//Start getDiscountAmt
		return itemPrice * discountRate;
	}//End getDiscountAmt

	//Get Method
	//this method will RETURN the discounted amount per item
	public double getDiscountPrice() 
	{//Start getDiscountPrice
		return itemPrice - getDiscountAmt();
	} //End getDiscountPrice


	//Get Method
	//this method will RETURN the number of each prize earned
	public int[] getPrizeCounts()
	{//Start getPrizeCounts
		return prizeCounts;
	}//End getPrizeCounts

	//Get Method
	//this method will RETURN a prize name
	public String getPrizeName()
	{//Start getPrizeName
		return prizeName;
	}//End getPrizeName


	//Get Method
	//this method will RETURN the total discounted amount for the total number of items
	public double getSubTotal() 
	{//Start getSubTotal
		return howMany * getDiscountPrice();
	}//End getSubTotal

	//Get Method
	//this method will RETURN the tax rate
	public double getTaxRate() 
	{//Start getTaxRate
		return TAX_RATE;
	}//End getTaxRate

	//Get Method
	//this method will RETURN the tax amount
	public double getTaxAmt() 
	{//Start getTaxAmt
		return getSubTotal() * TAX_RATE;
	}//End getTaxAmt

	//Get Method
	//this method will RETURN the final total
	public double getTotalCost() 
	{//Start getTotalCost
		return getSubTotal() + getTaxAmt();
	}//End getTotalCost

}//End Supportive Class Order
